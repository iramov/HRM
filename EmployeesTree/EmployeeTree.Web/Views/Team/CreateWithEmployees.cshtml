@model EmployeeTree.Web.ViewModel.TeamWithEmployeesViewModel

@{
    ViewBag.Title = "CreateWithEmployees";
}

<h2>Create with team members</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Team</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Delivery, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Delivery, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Delivery, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LeaderId, "LeaderId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("LeaderId", (SelectList)ViewBag.LeaderId, "Select team leader", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LeaderId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProjectId, "ProjectId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProjectId", (SelectList)ViewBag.Projects, "Select team project", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
            </div>
        </div>

        <button type="button" class="btn btn-default btn-sm" id="add-member-btn">
            Add employee
            <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
        </button>
        <table class="table" id="tableEmployees">
            <tr id="template-row">
                @Html.Label("Choose team member: ", new { @class = "control-label col-md-2" })
                <td class="col-md-10">
                    @Html.DropDownList("Members[index].Id", (SelectList)ViewBag.FreeEmployees, "Select team member", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Members, "", new { @class = "text-danger" })
                </td>
                <td id="td-delete-employee">
                    <button type="button" class="btn btn-default btn-group-sm removeRow" id="delete-employee-btn">
                        Delete
                        <span class="glyphicon glyphicon-trash" aria-hidden="true"></span>
                    </button>
                </td>
            </tr>
        </table>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to the List", "Index", null, new { @class = "btn btn-default" })
</div>

@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(function () {
            $('#template-row').hide();
            var index = 0;
            $('#add-member-btn').on('click', function () {
                var html = $('#template-row').html();
                html = html.replace(/index/g, index);
                $('#tableEmployees').append('<tr>' + html + '</tr>');
                index++;
            });

            $("#tableEmployees").on("click", "#delete-employee-btn", function () {
                $(this).closest('tr').remove();
            });
        });
    </script>
    <script>

        $("#beginForm").on("submit", function () {
            $("[data-container]").each(function (index, value) {
                //$(this).prop("name").replaceWith("Members[" + index + "].Id");
                $(this).attr("name", "Members[" + index + "].Id");

            });
        })
    </script>
}
