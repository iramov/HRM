@model EmployeeTree.Web.ViewModel.TeamWithEmployeesViewModel

@{
    ViewBag.Title = "CreateWithEmployees";
}

<h2>Create with team members</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Team</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Delivery, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Delivery, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Delivery, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LeaderId, "LeaderId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("LeaderId", (SelectList)ViewBag.LeaderId, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LeaderId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProjectId, "ProjectId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProjectId", (SelectList)ViewBag.Projects, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
            </div>
        </div>

        <button type="button" class="btn btn-default btn-sm" id="add-member-btn">
            Add employee
            <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
        </button>
        <table class="table" id="tableEmployees">
            <tr id="template-row">
                @Html.Label("Choose team member: ", new { @class = "control-label col-md-2" })
                <td class="col-md-10">
                    @Html.DropDownList("Members[index].Id", (SelectList)ViewBag.FreeEmployees, "Select team member",  new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Members, "", new { @class = "text-danger" })
                </td>
                <td id="td-delete-employee">
                    <button type="button" class="btn btn-default btn-group-sm removeRow" id="delete-employee-btn">
                        Delete
                        <span class="glyphicon glyphicon-trash" aria-hidden="true"></span>
                    </button>
                </td>
            </tr>
        </table>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to the List", "Index", null, new { @class = "btn btn-default" })
</div>

@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(function () {
            $('#template-row').hide();
            var index = 0;
            $('#add-member-btn').on('click', function () {
                var html = $('#template-row').html();
                html = html.replace(/index/g, index);
                $('#tableEmployees').append('<tr>' + html + '</tr>');
                index++;
            });

            $("#tableEmployees").on("click", "#delete-employee-btn", function () {
                $(this).closest('tr').remove();
            });
        });
    </script>

    @*<script type="text/javascript">
                $(function () {
                    $(document).ajaxStart(function () {
                        $("#dropdownID").attr("disabled", "disabled");
                    })
                        .ajaxStop(function () {
                            $("#dropdownID").removeAttr("disabled");

                        });

                });
        </script>*@

    @*<script>
            $(document).ready(function () {
                $(function () {

                    $('#template-row').hide();
                    $('.employee').hide();
                    var index = 0;
                    var count = 0;
                    var valuesAll = [];
                    var valuesSelected = [];
                    $('#add-member-btn').on('click', function () {
                        //var values = [];

                        if (count == 0) {
                            var html = $('#template-row').html();
                            html = html.replace(/index/g, index);
                            html = html.replace(/number/g, index);
                            $('#tableEmployees').append('<tr>' + html + '</tr>');
                            //valuesSelected.push($('#employeeDropDown').val())
                            index++;
                            count++;
                            //console.log($('#Employees[index].EmployeeId'));
                        }
                        else {
                            //console.log(index);
                            //var lastDropDown = index - 1;
                            //var selectedValue = $('#Employees[' + lastDropDown + '].EmployeeId').val();
                            //console.log($('#add-member-btn').closest('#employeeDropDown'));
                            //valuesSelected.push(selectedValue);
                            //console.log($('#Employees[' + lastDropDown + '].EmployeeId'));
                            var emptyDropDown = $('#emptyDDL').html();
                            console.log(employeeDropDown);
                            var btnDelete = $('#td-delete-employee').html();
                            //$('#employeeDropDown[' + index + '] option').each(function () {
                            //    valuesAll.push($(this).context);
                            //    //console.log($(this));
                            //});
                            //console.log(valuesAll);
                            //console.log(html);
                            emptyDropDown = emptyDropDown.replace(/index/g, index);
                            $('#tableEmployees').append('<tr>' + '<td class="col-md-10">' + emptyDropDown + '</td><td>' + btnDelete + '</td>' + '</tr>');
                            index++;
                        }
                    });

                    $("#tableEmployees").on("click", "#delete-employee-btn", function () {
                        $(this).closest('tr').remove();
                    });

                    //var values = [];
                    //$('#my_dropdown option').each(function () {
                    //    values.push($(this).attr('value'));
                    //});

                });
            });
        </script>*@
}
